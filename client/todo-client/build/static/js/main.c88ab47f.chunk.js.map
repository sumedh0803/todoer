{"version":3,"sources":["Utils/AuthContext.js","components/ColorPicker.js","components/NewTodo.js","components/Todo.js","components/TodoDetails.js","components/assets/emptylist.png","components/TodoContainer.js","components/Home.js","components/SignIn.js","components/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","React","createContext","AuthConsumer","Consumer","this","props","children","Component","AuthProvider","signup","name","uname","pwd","setState","signupInProgress","fetch","method","body","JSON","stringify","username","password","headers","then","resp","a","json","user","status","isSignedIn","Cookies","set","signUpError","message","signout","cookies","remove","signin","signinInProgress","signInError","refresh","get","console","log","error","Error","catch","e","state","bind","accessToken","Provider","value","ColorPicker","selectColor","color","selected","colors","display","Paper","elevation","style","transform","marginBottom","maxWidth","padding","Grid","container","spacing","map","item","variant","height","width","backgroundColor","float","cursor","border","onClick","NewTodo","changeHandler","target","dateChangeHandler","date","prev","dueDate","dueTime","Date","setHours","timeChangeHandler","time","now","submitHandler","preventDefault","data","title","todoColor","colorPickerState","dateTimePickerState","toggleColorPicker","toggleDateTimePicker","getTime","hrs","getHours","mins","getMinutes","ampm","clearDue","completed","sm","Typography","newTodoError","Alert","severity","margin","action","onSubmit","TextField","label","fullWidth","className","onChange","multiline","IconButton","Tooltip","aria-label","getMonth","getDate","getFullYear","Collapse","in","timeout","unmountOnExit","utils","DateFnsUtils","disableToolbar","format","id","KeyboardButtonProps","Button","todocolor","justify","type","Todo","getDueDate","finalDate","getDueTime","isDue","getSeconds","_id","prevProps","wordBreak","openTodoHandler","deleteTodoHandler","TodoDetails","handleTodoUpdate","closeTodoHandler","context","handleTodoComplete","setTimeout","loadTodoDetails","todoId","createdAt","updatedAt","direction","flexWrap","DialogTitle","required","inputProps","fontSize","fontWeight","DialogContent","toLocaleString","startIcon","contextType","TodoContainer","stopPropagation","openTodo","openTodoId","fetchTodos","todos","length","breakpointCols","default","1100","700","400","columnClassName","todo","Dialog","open","alignItems","src","emptylist","Home","_isMounted","Box","clone","order","xs","md","lg","align-items","to","SignIn","endIcon","CircularProgress","size","SignUp","updateState","App","loaded","AppBar","position","Toolbar","flex","textDecoration","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c88ab47f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst AuthContext = React.createContext()\r\nclass AuthConsumer extends Component {\r\n    render() {\r\n        return (\r\n            <AuthContext.Consumer>\r\n                {this.props.children}\r\n            </AuthContext.Consumer>\r\n        )\r\n    }\r\n}\r\nclass AuthProvider extends Component{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.state = {\r\n            user: null,\r\n            signUpError:\"\",\r\n            signInError:\"\",\r\n            isSignedIn: false,\r\n            signinInProgress: false,\r\n            signupInProgress: false,\r\n            signup: this.signup,\r\n            signout: this.signout,\r\n            signin: this.signin,\r\n            refresh: this.refresh\r\n        }\r\n        this.signup = this.signup.bind(this)\r\n        this.signin = this.signin.bind(this)\r\n        this.signout = this.signout.bind(this)\r\n        this.refresh = this.refresh.bind(this)\r\n  \r\n    }\r\n    componentDidMount() {\r\n        const cookies = new Cookies();\r\n        const accessToken = cookies.get('accessToken')\r\n        const user = cookies.get('user')\r\n        this.setState({isSignedIn:accessToken!=null,user})\r\n    }\r\n\r\n    signup = (name,uname,pwd) =>\r\n    {\r\n        this.setState({signupInProgress: true},()=>{\r\n            fetch(\"/auth/signup\",\r\n            {\r\n                method: 'post',\r\n                body: JSON.stringify({username: uname, password: pwd, name: name}),\r\n                headers: {\"Content-Type\": \"application/json\"}\r\n            })\r\n            .then(async (resp) => \r\n            {\r\n                let user = await resp.json()\r\n                if(resp.status == 200)\r\n                {\r\n                    this.setState({\r\n                        isSignedIn: true,\r\n                        user: user,\r\n                        signupInProgress: false\r\n                    },()=>{\r\n                        new Cookies().set(\"user\",user)\r\n                    })\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        signUpError: user.message,\r\n                        isSignedIn: false,\r\n                        user: null,\r\n                        signupInProgress: false\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n    \r\n    signout = () =>\r\n    {\r\n        const cookies = new Cookies();\r\n        cookies.remove(\"accessToken\")\r\n        cookies.remove(\"refreshToken\")\r\n        this.setState({\r\n            isSignedIn: false,\r\n            user: null\r\n        })\r\n    }\r\n\r\n    signin = (uname,pwd) =>\r\n    {\r\n        this.setState({signinInProgress: true},()=>{\r\n            fetch(\"/auth/signin\",\r\n            {\r\n                method: 'post',\r\n                body: JSON.stringify({username: uname, password:pwd}),\r\n                headers: {\"Content-Type\": \"application/json\"}\r\n            })\r\n            .then(async (resp) => \r\n            {\r\n                let user = await resp.json()\r\n                if(resp.status == 200)\r\n                {\r\n                    this.setState({\r\n                        isSignedIn: true,\r\n                        user: user,\r\n                        signinInProgress: false,\r\n                    },()=>{\r\n                        new Cookies().set(\"user\",user)\r\n                    })\r\n                }\r\n                else\r\n                {\r\n                    this.setState({\r\n                        signInError: user.message,\r\n                        isSignedIn: false,\r\n                        user: null,\r\n                        signinInProgress: false,\r\n                    })\r\n                }\r\n            }) \r\n        })\r\n        \r\n          \r\n    }\r\n\r\n     refresh = async () =>{\r\n        let status = 0\r\n        await fetch('/auth/refresh',\r\n        {\r\n            method: 'post',\r\n            headers: {\"Content-Type\": \"application/json\", \"refreshToken\":new Cookies().get(\"refreshToken\")},\r\n        })\r\n        .then(async resp => {\r\n            if(resp.status == 200)\r\n            {\r\n                console.log(\"New token received. Fetching data\")\r\n                status = 200\r\n            }\r\n            else\r\n            {\r\n                this.signout()\r\n                const error = await resp.json()\r\n                throw new Error(error.message)\r\n            }\r\n        })\r\n        .catch(e =>{\r\n            console.log(e)\r\n            status = 400\r\n        }) \r\n        return status\r\n    }\r\n\r\n    render() {\r\n        return <AuthContext.Provider value = {this.state}>\r\n            {this.props.children}\r\n        </AuthContext.Provider>\r\n    }\r\n\r\n}\r\n\r\nexport {AuthProvider, AuthConsumer}\r\nexport default AuthContext\r\n","import React, { Component } from 'react'\r\n\r\nimport { Grid, Paper } from '@material-ui/core'\r\n\r\n\r\nexport class ColorPicker extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            colors: this.props.colors ? this.props.colors : [\"#F48FB1\",\"#CE93D8\", \"#80CBC4\", \"#FFCC80\", \"#FFAB91\"],\r\n            selected: this.props.selected\r\n        }\r\n    }\r\n    selectColor = (color) => {\r\n        color = color === this.state.selected ? \"#FFFFFF\" : color\r\n        this.setState({\r\n            selected: color\r\n        }, () => {\r\n            this.props.selectColor(color)\r\n        }) \r\n    }\r\n    render() {\r\n        return (\r\n            this.props.display ?<Paper elevation = {0} style = {{transform: \"translateX(12px)\", marginBottom: \"12px\",maxWidth: \"175px\", padding: \"4px\"}}><Grid container spacing = {1}>\r\n                {this.state.colors.map(color => {\r\n                    if(color === this.state.selected) return <Grid item key = {color}><Paper variant = \"outlined\" style = {{height: \"25px\", width : \"25px\", backgroundColor : color, display: 'inline', float: \"left\", cursor: 'pointer', border: \"2px solid black\"}} onClick = {() => this.selectColor(color)} /></Grid>\r\n                    else return <Grid item key = {color}><Paper variant = \"outlined\" style = {{height: \"25px\", width : \"25px\", backgroundColor : color, display: 'inline', float: \"left\", cursor: 'pointer'}} onClick = {() => this.selectColor(color)} /></Grid>\r\n                })}\r\n            </Grid></Paper>\r\n            :\r\n            null\r\n        )\r\n    }\r\n}\r\n\r\nexport default ColorPicker\r\n","import React, { Component } from 'react'\r\nimport { Button, Grid, IconButton, Paper, TextField, Collapse, Typography, Tooltip } from '@material-ui/core'\r\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport AddAlarmIcon from '@material-ui/icons/AddAlarm';\r\nimport PaletteIcon from '@material-ui/icons/Palette';\r\nimport ColorPicker from './ColorPicker';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nexport class NewTodo extends Component {\r\n    constructor()\r\n    {\r\n        super()\r\n        this.state = {\r\n            title: \"\",\r\n            body: \"\",\r\n            colorPickerState: false,\r\n            dateTimePickerState: false,\r\n            todoColor: \"#FFFFFF\",\r\n            dueDate: null,\r\n            dueTime: null,\r\n            completed: false\r\n        }\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    dateChangeHandler = (date) =>{\r\n        this.setState(prev => ({\r\n            dueDate: date,\r\n            dueTime: !prev.dueTime ? new Date(date.setHours(8,0,0,0)) : prev.dueTime\r\n        }))\r\n    }\r\n\r\n    timeChangeHandler = (time) =>{\r\n        this.setState(prev => ({\r\n            dueTime: time,\r\n            dueDate: !prev.dueDate ? new Date(Date.now()) : prev.dueDate\r\n        }))\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault()\r\n        const data = this.state\r\n        this.setState({\r\n            title : \"\",\r\n            body: \"\",\r\n            todoColor: \"#FFFFFF\",\r\n            colorPickerState: false,\r\n            dateTimePickerState: false,\r\n            dueDate: null,\r\n            dueTime: null,\r\n        }, ()=> {\r\n            this.props.submitHandler(data)\r\n        })\r\n    }\r\n\r\n    toggleColorPicker = () => {\r\n        this.setState(prev => ({\r\n            colorPickerState: !prev.colorPickerState,\r\n            dateTimePickerState: false\r\n        }))\r\n    }\r\n\r\n    toggleDateTimePicker = () =>{\r\n        this.setState(prev => ({\r\n            dateTimePickerState: !prev.dateTimePickerState,\r\n            colorPickerState: false\r\n        }))\r\n    }\r\n\r\n    selectColor = (color) => {\r\n        this.setState({\r\n            todoColor: color\r\n        })\r\n    }\r\n\r\n    getTime = () => {\r\n        let hrs = (this.state.dueTime.getHours() % 12 < 10 ? '0' : '') + this.state.dueTime.getHours() % 12\r\n        let mins = (this.state.dueTime.getMinutes() < 10 ? '0' : '') + this.state.dueTime.getMinutes()\r\n        let ampm = this.state.dueTime.getHours() >= 12 ? 'PM' : 'AM'\r\n        return `${hrs}:${mins} ${ampm}`\r\n        \r\n    }\r\n\r\n    clearDue = () => {\r\n        this.setState({\r\n            dueDate: null,\r\n            dueTime: null\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Grid  item container sm = {12} >\r\n                <Paper style = {{padding: \"16px\", backgroundColor: this.state.todoColor}} elevation = {3}>\r\n                    <Typography variant = \"h4\">I need to...</Typography>\r\n                    {this.props.newTodoError && <Alert severity=\"error\" variant=\"outlined\" style = {{margin: \"12px 0px\"}}>{this.props.newTodoError}</Alert>}\r\n                    <form method=\"post\" action = \"/todos\" onSubmit = {(e) => this.submitHandler(e)}>\r\n                        <TextField \r\n                            name = \"title\"\r\n                            label=\"Title\" \r\n                            variant=\"outlined\" \r\n                            fullWidth \r\n                            style={{ margin: \"4px 0px\"  }} \r\n                            value = {this.state.title}\r\n                            className = \"customInput\"\r\n                            onChange={(e) => this.changeHandler(e)} />\r\n                        <TextField \r\n                            name = \"body\"\r\n                            label=\"Description\" \r\n                            variant=\"outlined\" \r\n                            fullWidth multiline \r\n                            className = \"customInput\"\r\n                            style={{ margin: \"4px 0px\"}} \r\n                            value = {this.state.body}\r\n                            onChange={(e) => this.changeHandler(e)}/>\r\n                        \r\n                        <Paper\r\n                            elevation = {3}\r\n                            style={{ margin: \"4px 0px\"}} >\r\n                            <IconButton>\r\n                                <Tooltip title=\"Set Reminder\" aria-label=\"set reminder\">\r\n                                    <AddAlarmIcon onClick = {() => this.toggleDateTimePicker()}/>\r\n                                </Tooltip>\r\n                            </IconButton>                           \r\n                            <IconButton>\r\n                                <Tooltip title=\"Change Color\" aria-label=\"change color\">\r\n                                    <PaletteIcon onClick = {() => this.toggleColorPicker()}/>\r\n                                </Tooltip>\r\n                            </IconButton>\r\n                           \r\n                           \r\n                            {this.state.dueDate && \r\n                                <Typography variant=\"body2\" style={{ margin: \"4px 12px\", backgroundColor: \"#FFF\", marginBottom: \"12px\" }}>\r\n                                    Due on {`${this.state.dueDate.getMonth()+1}/${this.state.dueDate.getDate()}/${this.state.dueDate.getFullYear()} at ${this.getTime()}`} \r\n                                </Typography>\r\n                            }\r\n                            \r\n                            <Collapse in={this.state.dateTimePickerState || this.state.colorPickerState} timeout=\"auto\" unmountOnExit>\r\n                                {this.state.dateTimePickerState ? \r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                    <>\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        style={{ backgroundColor: \"#FFF\", transform: \"translateX(12px)\", marginBottom: \"12px\" }} \r\n                                        id=\"dueDate\"\r\n                                        label=\"Due Date\"\r\n                                        value={this.state.dueDate}\r\n                                        name = \"dueDate\"\r\n                                        onChange={(date)=> this.dateChangeHandler(date)}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                    <KeyboardTimePicker\r\n                                        style={{ margin: \"4px 0px\", backgroundColor: \"#FFF\", transform: \"translateX(12px)\", marginBottom: \"12px\" }} \r\n                                        id=\"dueTime\"\r\n                                        label=\"Due Time\"\r\n                                        value={this.state.dueTime}\r\n                                        onChange={(time)=> this.timeChangeHandler(time)}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change time',\r\n                                        }}\r\n                                    />\r\n                                    {this.state.dueDate && <Button color=\"secondary\" style={{ backgroundColor: \"#FFF\", transform: \"translateX(12px)\", marginBottom: \"12px\" }} onClick = {() => this.clearDue()} >Clear Due date and time</Button>}\r\n                                </>\r\n                                </MuiPickersUtilsProvider>\r\n                                : null}\r\n                                <ColorPicker display = {this.state.colorPickerState} selectColor = {this.selectColor} selected = {this.state.todocolor}/>\r\n                            </Collapse>\r\n                            \r\n                        </Paper>\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Button \r\n                                variant=\"contained\" \r\n                                color=\"primary\" \r\n                                type=\"submit\"\r\n                                style={{ margin: \"4px 0px\"}} >\r\n                                    add new to-do\r\n                            </Button>\r\n                        </Grid>\r\n                        \r\n                    </form>\r\n                </Paper>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewTodo\r\n","import React, { Component } from 'react'\r\n\r\nimport { IconButton, Paper, Typography } from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport class Todo extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            id: null,\r\n            title: null,\r\n            body: null,\r\n            todoColor: null,\r\n            dueDate: null,\r\n            dueTime: null,\r\n            finalDate: null,\r\n            isDue: false,\r\n            completed: null\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        let date = this.props.data.dueDate ? new Date(this.props.data.dueDate) : null\r\n        let time = this.props.data.dueTime ? new Date(this.props.data.dueTime) : null\r\n        let finalDate\r\n        if(date != null && time != null)\r\n            finalDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), time.getHours(), time.getMinutes(), time.getSeconds())\r\n            \r\n        else\r\n            finalDate = null\r\n        this.setState({\r\n            id: this.props.data._id,\r\n            title: this.props.data.title, \r\n            body: this.props.data.body,\r\n            todoColor: this.props.data.todoColor,\r\n            dueDate: this.props.data.dueDate ? new Date(this.props.data.dueDate) : null,\r\n            dueTime: this.props.data.dueTime ? new Date(this.props.data.dueTime) : null,\r\n            finalDate,\r\n            isDue: finalDate ? Date.now() > finalDate : false,\r\n            completed: this.props.data.completed\r\n            })\r\n    }\r\n    componentDidUpdate(prevProps)\r\n    {\r\n        let date = this.props.data.dueDate ? new Date(this.props.data.dueDate) : null\r\n        let time = this.props.data.dueTime ? new Date(this.props.data.dueTime) : null\r\n        let finalDate\r\n        if(date != null && time != null)\r\n            finalDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), time.getHours(), time.getMinutes(), time.getSeconds())\r\n            \r\n        else\r\n            finalDate = null\r\n\r\n        if(this.props.data.title !== prevProps.data.title || this.props.data.body !== prevProps.data.body || this.props.data.id !== prevProps.data.id ||\r\n            this.props.data.todoColor !== prevProps.data.todoColor || this.props.data.completed !== prevProps.data.completed || this.props.data.dueDate !== prevProps.data.dueDate ||\r\n            this.props.data.dueTime !== prevProps.data.dueTime)\r\n        this.setState({\r\n            id: this.props.data._id,\r\n            title: this.props.data.title, \r\n            body: this.props.data.body,\r\n            todoColor: this.props.data.todoColor,\r\n            dueDate: new Date(this.props.data.dueDate),\r\n            dueTime: new Date(this.props.data.dueTime),\r\n            finalDate,\r\n            isDue: finalDate ? Date.now() > finalDate : false,\r\n            completed: this.props.data.completed,})\r\n    }\r\n\r\n    getDueDate = () => {\r\n        return `${this.state.finalDate.getMonth()+1}/${this.state.finalDate.getDate()}/${this.state.finalDate.getFullYear()}`\r\n    }\r\n\r\n    getDueTime = () => {\r\n        let hrs = (this.state.finalDate.getHours() % 12 < 10 ? '0' : '') + this.state.finalDate.getHours() % 12\r\n        let mins = (this.state.finalDate.getMinutes() < 10 ? '0' : '') + this.state.finalDate.getMinutes()\r\n        let ampm = this.state.finalDate.getHours() >= 12 ? 'PM' : 'AM'\r\n        return `${hrs}:${mins} ${ampm}`\r\n        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Paper style = {{padding: \"8px 8px 0px 8px\", wordBreak: 'break-word', backgroundColor: this.props.data.todoColor ? this.props.data.todoColor : \"#FFFFFF\", border: this.state.isDue ? \"2px solid red\" : \"none\", cursor: \"pointer\" }} \r\n                    elevation = {3} \r\n                    onClick = {() => this.props.openTodoHandler(this.state.id)}>\r\n                        <div className = {this.state.completed ? \"strike\" : null}><b>{this.state.title}</b></div>\r\n                        {this.state.finalDate && <Typography variant = \"caption\" className = {this.state.completed ? \"strike\" : null} style = {{color: this.state.isDue ? \"red\" : \"black\" }}>Due on {this.getDueDate()} at {this.getDueTime()}</Typography>}\r\n                        <p className = {this.state.completed ? \"strike\" : null}>{this.state.body}</p>\r\n                        <IconButton onClick = {(e) => this.props.deleteTodoHandler(e,this.state.id)}>\r\n                            <DeleteIcon id = {this.state.id}/>\r\n                        </IconButton>\r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todo\r\n","import React, { Component } from 'react'\r\nimport { Button, Collapse, DialogContent, DialogTitle, Grid, IconButton, Paper, TextField, Tooltip, Typography } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { KeyboardDatePicker, KeyboardTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport AddAlarmIcon from '@material-ui/icons/AddAlarm';\r\nimport PaletteIcon from '@material-ui/icons/Palette';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport Cookies from 'universal-cookie';\r\nimport ColorPicker from './ColorPicker';\r\nimport AuthContext from '../Utils/AuthContext';\r\n\r\nexport class TodoDetails extends Component {\r\n    static contextType = AuthContext\r\n    constructor()\r\n    {\r\n        super()\r\n        this.state = {\r\n            title: \"\",\r\n            body: \"\",\r\n            colorPickerState: false,\r\n            dateTimePickerState: true,\r\n            todoColor: \"#FFFFFF\",\r\n            dueDate: null,\r\n            dueTime: null,\r\n            completed: null\r\n        }\r\n        \r\n    }\r\n    componentDidMount()\r\n    {\r\n        this.loadTodoDetails();\r\n    }\r\n\r\n    loadTodoDetails()\r\n    {\r\n        fetch(`/todos/${this.props.todoId}`,{\r\n            headers: {\"accessToken\": new Cookies().get(\"accessToken\")}\r\n        })\r\n        .then(async (resp) =>{\r\n            if(resp.status == 200)\r\n            {\r\n                const data = await resp.json()\r\n                this.setState({\r\n                    id: data._id,\r\n                    title: data.title,\r\n                    body: data.body,\r\n                    todoColor: data.todoColor,\r\n                    dueDate: data.dueDate ? new Date(data.dueDate) : null,\r\n                    dueTime: data.dueTime ? new Date(data.dueTime) : null,\r\n                    createdAt: new Date(data.createdAt),\r\n                    updatedAt: new Date(data.updatedAt),\r\n                    completed: data.completed,\r\n                })\r\n            }\r\n            else if(resp.status == 401)\r\n            {\r\n                const status = await this.context.refresh()\r\n                if(status == 200) this.loadTodoDetails()   \r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n    toggleColorPicker = () => {\r\n        this.setState(prev => ({\r\n            colorPickerState: !prev.colorPickerState,\r\n            dateTimePickerState: false\r\n        }))\r\n    }\r\n\r\n    toggleDateTimePicker = () =>{\r\n        this.setState(prev => ({\r\n            dateTimePickerState: !prev.dateTimePickerState,\r\n            colorPickerState: false\r\n        }))\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    dateChangeHandler = (date) =>{\r\n        this.setState(prev => ({\r\n            dueDate: date,\r\n            dueTime: !prev.dueTime ? new Date(date.setHours(8,0,0,0)) : prev.dueTime\r\n        }))\r\n    }\r\n\r\n    timeChangeHandler = (time) =>{\r\n        this.setState(prev => ({\r\n            dueTime: time,\r\n            dueDate: !prev.dueDate ? new Date(Date.now()) : prev.dueDate\r\n        }))\r\n    }\r\n\r\n    getTime = () => {\r\n        let hrs = (this.state.dueTime.getHours() % 12 < 10 ? '0' : '') + this.state.dueTime.getHours() % 12\r\n        let mins = (this.state.dueTime.getMinutes() < 10 ? '0' : '') + this.state.dueTime.getMinutes()\r\n        let ampm = this.state.dueTime.getHours() >= 12 ? 'PM' : 'AM'\r\n        return `${hrs}:${mins} ${ampm}`\r\n        \r\n    }\r\n\r\n    selectColor = (color) => {\r\n        this.setState({\r\n            todoColor: color\r\n        })\r\n    }\r\n\r\n    clearDue = () => {\r\n        this.setState({\r\n            dueDate: null,\r\n            dueTime: null\r\n        })\r\n    }\r\n\r\n    handleTodoUpdate = () => {\r\n        fetch(`/todos/${this.state.id}/update`,\r\n        {\r\n            method: \"put\",\r\n            headers: {\"Content-Type\": \"application/json\", \"accessToken\": new Cookies().get(\"accessToken\")},\r\n            body : JSON.stringify(this.state)\r\n        })\r\n        .then(async (resp) =>{\r\n            if(resp.status == 200)\r\n            {\r\n                this.props.closeTodoHandler(true)\r\n            }\r\n            else if(resp.status == 401)\r\n            {\r\n                const status = await this.context.refresh()\r\n                if(status == 200) this.handleTodoUpdate()  \r\n            }\r\n            else\r\n            {\r\n                const error = await resp.json().message\r\n                throw new Error(error)\r\n            }\r\n        })\r\n        .catch(e=>{\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    handleTodoComplete = () => {\r\n        this.setState(prev => ({\r\n            completed: !prev.completed\r\n        }),() => {\r\n            fetch(`/todos/${this.state.id}/complete`,\r\n            {\r\n                method: \"put\",\r\n                headers: {\"Content-Type\": \"application/json\", \"accessToken\": new Cookies().get(\"accessToken\")},\r\n                body : JSON.stringify({completed:this.state.completed})\r\n            })\r\n            .then(async (resp) =>{\r\n                if(resp.status == 200)\r\n                {\r\n                    setTimeout(() => {\r\n                        this.props.closeTodoHandler(true)\r\n                    },750)\r\n                }\r\n                else if(resp.status == 401)\r\n                {\r\n                    const status = await this.context.refresh()\r\n                    if(status == 200) this.handleTodoComplete()  \r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.title ?\r\n                <Grid container style = {{backgroundColor: this.state.todoColor}} direction = \"column\">\r\n                    <Grid item container style = {{flexWrap: \"nowrap\"}}>\r\n                        <Grid item sm = {9}>\r\n                            <DialogTitle>\r\n                                <TextField\r\n                                    required\r\n                                    inputProps={{style: {fontSize: \"xx-large\",fontWeight: \"bolder\"}}}\r\n                                    id=\"filled-required\"\r\n                                    name = \"title\"\r\n                                    fullWidth\r\n                                    value={this.state.title}\r\n                                    onChange={(e) => this.changeHandler(e)}\r\n                                />     \r\n                            </DialogTitle>\r\n                        </Grid>\r\n                        <Grid item sm = {3}>\r\n                                <IconButton style = {{float: \"right\"}} onClick = {() => this.props.closeTodoHandler(false)}>\r\n                                    <CloseIcon/>\r\n                                </IconButton>\r\n                            </Grid> \r\n                        </Grid>\r\n                    <DialogContent>\r\n                        <Grid item container spacing = {2}>\r\n                            <Grid item sm = {6}>\r\n                                <TextField \r\n                                    name = \"body\"\r\n                                    fullWidth multiline \r\n                                    // style={{ margin: \"4px 0px\"}} \r\n                                    value = {this.state.body}\r\n                                    onChange={(e) => this.changeHandler(e)}/>\r\n                                <Grid item>\r\n                                    <Typography variant = \"caption\"><InfoIcon fontSize = \"small\" style = {{transform: \"translate(0px,3px)\"}}/> Created on {this.state.createdAt.toLocaleString()}</Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography variant = \"caption\"><InfoIcon fontSize = \"small\" style = {{transform: \"translate(0px,3px)\"}}/> Last Modified on {this.state.updatedAt.toLocaleString()} </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item sm = {6}>\r\n                                <Paper elevation = {3} style={{ margin: \"4px 0px\"}} >\r\n                                    <IconButton onClick = {() => this.toggleDateTimePicker()}>\r\n                                        <Tooltip title=\"Set Reminder\" aria-label=\"set reminder\">\r\n                                            <AddAlarmIcon/>\r\n                                        </Tooltip>\r\n                                    </IconButton>                           \r\n                                    <IconButton onClick = {() => this.toggleColorPicker()}>\r\n                                        <Tooltip title=\"Change Color\" aria-label=\"change color\">\r\n                                            <PaletteIcon/>\r\n                                            </Tooltip>\r\n                                    </IconButton>\r\n                                    <IconButton onClick = {(e) => this.props.deleteTodoHandler(e,this.state.id)}>\r\n                                        <Tooltip title=\"Delete To-do\" aria-label=\"Delete To-do\">\r\n                                            <DeleteIcon id = {this.state.id}/>\r\n                                        </Tooltip>\r\n                                    </IconButton>\r\n                                    {this.state.dueDate && \r\n                                        <Typography variant=\"body2\" style={{ margin: \"4px 12px\", backgroundColor: \"#FFF\", marginBottom: \"12px\" }}>\r\n                                            Due on {`${this.state.dueDate.getMonth()+1}/${this.state.dueDate.getDate()}/${this.state.dueDate.getFullYear()} at ${this.getTime()}`} \r\n                                        </Typography>\r\n                                    }\r\n                                    <Collapse in={this.state.dateTimePickerState || this.state.colorPickerState} timeout=\"auto\" unmountOnExit>\r\n                                        {this.state.dateTimePickerState ? \r\n                                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                                <>\r\n                                                <KeyboardDatePicker\r\n                                                    disableToolbar\r\n                                                    variant=\"inline\"\r\n                                                    format=\"MM/dd/yyyy\"\r\n                                                    style={{ backgroundColor: \"#FFF\", transform: \"translateX(12px)\", marginBottom: \"12px\" }} \r\n                                                    id=\"dueDate\"\r\n                                                    label=\"Due Date\"\r\n                                                    value={this.state.dueDate}\r\n                                                    name = \"dueDate\"\r\n                                                    onChange={(date)=> this.dateChangeHandler(date)}\r\n                                                    KeyboardButtonProps={{\r\n                                                        'aria-label': 'change date'\r\n                                                    }}\r\n                                                />\r\n                                                <KeyboardTimePicker\r\n                                                    style={{ margin: \"4px 0px\", backgroundColor: \"#FFF\", transform: \"translateX(12px)\", marginBottom: \"12px\" }} \r\n                                                    id=\"dueTime\"\r\n                                                    label=\"Due Time\"\r\n                                                    value={this.state.dueTime}\r\n                                                    onChange={(time)=> this.timeChangeHandler(time)}\r\n                                                    KeyboardButtonProps={{\r\n                                                        'aria-label': 'change time',\r\n                                                    }}\r\n                                                />\r\n                                                {this.state.dueDate && <Button color=\"secondary\" style={{ backgroundColor: \"#FFF\", transform: \"translateX(12px)\", marginBottom: \"12px\" }} onClick = {() => this.clearDue()} >Clear Due date and time</Button>}\r\n                                        </>\r\n                                        </MuiPickersUtilsProvider>\r\n                                        : null}\r\n                                        <ColorPicker display = {this.state.colorPickerState} selectColor = {this.selectColor} selected = {this.state.todoColor}/>\r\n                                    </Collapse>\r\n                                </Paper>    \r\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\" style={{ margin: \"4px\", float: \"right\"}} onClick = {()=> this.handleTodoUpdate()} >\r\n                                    Update\r\n                                </Button>   \r\n                                <Button variant= {this.state.completed ? \"outlined\" : \"contained\"} color=\"secondary\" type=\"submit\" style={{ margin: \"4px\", float: \"right\"}} onClick = {()=> this.handleTodoComplete()} startIcon = {this.state.completed ? <DoneIcon/> : null}>\r\n                                    {this.state.completed ? \"Done\" : \"Mark As done\"}\r\n                                </Button>                                                 \r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContent>   \r\n                </Grid>\r\n            :\r\n            null\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoDetails\r\n","export default __webpack_public_path__ + \"static/media/emptylist.053c556a.png\";","import React, { Component } from 'react'\r\nimport Masonry from 'react-masonry-css'\r\nimport Cookies from 'universal-cookie';\r\nimport { Dialog, Grid, Typography } from '@material-ui/core'\r\n\r\nimport AuthContext from '../Utils/AuthContext'\r\n\r\nimport Todo from './Todo'\r\nimport TodoDetails from './TodoDetails'\r\n\r\nimport emptylist from './assets/emptylist.png'\r\n\r\nclass TodoContainer extends Component {\r\n    static contextType = AuthContext\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            openTodo: false,\r\n            openTodoId: null\r\n        }\r\n    }\r\n        \r\n    deleteTodoHandler = (e,id) => {\r\n        e.stopPropagation();\r\n      \r\n        fetch(`/todos/${id}`,\r\n        {\r\n            method: \"delete\",\r\n            headers: {\"accessToken\": new Cookies().get(\"accessToken\")}\r\n        })\r\n        .then(async (resp) => {\r\n            if(resp.status === 200) this.closeTodoHandler(true);\r\n            else\r\n            {\r\n                const status = await this.context.refresh()\r\n                if(status == 200) this.deleteTodoHandler(e,id)\r\n            }\r\n            \r\n        })\r\n        .catch((e) => {\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    openTodoHandler = (id) => this.setState({openTodo: true,openTodoId: id})\r\n    \r\n    closeTodoHandler = (fetchTodos) => \r\n    {\r\n        this.setState({openTodo: false},()=>{\r\n            if(fetchTodos)\r\n                this.props.fetchTodos()\r\n        })\r\n        \r\n    }\r\n    render() {\r\n        const breakpoints = {\r\n            default: 4,\r\n            1100: 3,\r\n            700: 2,\r\n            400: 1\r\n        }\r\n        return (\r\n            this.props.todos.length > 0 ?\r\n            <>\r\n            <Masonry\r\n                breakpointCols={breakpoints}\r\n                className=\"my-masonry-grid\"\r\n                columnClassName=\"my-masonry-grid_column\">\r\n                {this.props.todos.map((todo) => {\r\n                    return  <Todo key = {todo._id} data = {todo} deleteTodoHandler = {this.deleteTodoHandler} openTodoHandler = {this.openTodoHandler} />\r\n                })}\r\n            </Masonry>\r\n            <Dialog open = {this.state.openTodo} fullWidth maxWidth=\"sm\" >\r\n                <TodoDetails\r\n                    closeTodoHandler = {this.closeTodoHandler}\r\n                    todoId = {this.state.openTodoId}\r\n                    deleteTodoHandler = {this.deleteTodoHandler}\r\n                />\r\n            </Dialog>\r\n            </>\r\n            :\r\n            <Grid container justify=\"center\" alignItems=\"center\" direction = \"column\" style = {{height:\"100%\"}}>\r\n                <Grid item>\r\n                    <img src = {emptylist} width = {100}/>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant = \"h4\">No To-dos</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoContainer\r\n","import React, { Component } from 'react'\r\nimport Cookies from 'universal-cookie';\r\nimport { Box, Grid } from '@material-ui/core'\r\nimport { Redirect } from 'react-router';\r\n\r\nimport AuthContext, { AuthConsumer } from '../Utils/AuthContext';\r\n\r\nimport NewTodo from './NewTodo';\r\nimport TodoContainer from './TodoContainer';\r\n\r\nclass Home extends Component {\r\n    static contextType = AuthContext\r\n    constructor()\r\n    {\r\n        super()\r\n        this.state = {\r\n            todos: [],\r\n            isSignedIn: new Cookies().get(\"accessToken\") ? true : false,\r\n            newTodoError: null\r\n        }\r\n        this._isMounted = false;\r\n    }\r\n    componentDidMount() \r\n    {\r\n        this._isMounted = true;\r\n        this._isMounted && this.fetchTodos() \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n     }\r\n\r\n    fetchTodos = async () =>\r\n    {\r\n        await fetch('/todos',{\r\n            headers: {\"accessToken\": new Cookies().get(\"accessToken\")},\r\n        })\r\n        .then(async (resp) =>{\r\n            if(resp.status == 200)\r\n            {\r\n                const data = await resp.json()\r\n                this._isMounted && this.setState({todos: data})\r\n            }\r\n            else if(resp.status == 401)\r\n            {\r\n                const status = await this.context.refresh()\r\n                if(status == 200) this.fetchTodos()\r\n            }\r\n            else\r\n            {\r\n                const error = await resp.json()\r\n                throw new Error(error.message)\r\n            }\r\n        })\r\n        .catch(e =>{\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    submitHandler = (data) => {\r\n        fetch('/todos',{\r\n            method : \"post\",\r\n            headers: {\"Content-Type\": \"application/json\", \"accessToken\": new Cookies().get(\"accessToken\")},\r\n            body : JSON.stringify(data)\r\n        })\r\n        .then(async (resp) =>{\r\n            if(resp.status == 200)\r\n            {\r\n                this.setState({newTodoError: null})\r\n                this.fetchTodos()\r\n            }\r\n            else if(resp.status == 401)\r\n            {\r\n                const status = await this.context.refresh()\r\n                if(status == 200) this.submitHandler(data)\r\n            }\r\n            else\r\n            {\r\n                const error = await resp.json()\r\n                this.setState({newTodoError: error.message})\r\n                throw new Error(error.message)\r\n            }\r\n        })\r\n        .catch(e => {\r\n            console.log(e)\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <AuthConsumer>\r\n            {\r\n                (context) => {\r\n                    return (!context.isSignedIn ?\r\n                    <Redirect to = \"/signin\"/>\r\n                    :\r\n                    <Grid container spacing={0}>\r\n                        <Box clone order = {{xs:0, md:0}} >\r\n                        <Grid item sm = {false} lg = {1}></Grid>\r\n                        </Box>\r\n                        <Box clone order = {{xs : 2, md: 1}}>\r\n                        <Grid item className = \"todoContainer\"  container xs = {12} sm = {12} md = {8} lg = {7} direction = \"row\" justify = \"flex-start\" align-items = \"flex-start\" style = {{border: \"0px solid\", padding: \"12px\", height: \"fit-content\"}}>\r\n                            <TodoContainer  todos = {this.state.todos} fetchTodos = {this.fetchTodos}/>\r\n                        </Grid>\r\n                        </Box>\r\n                        <Box clone order = {{xs:1, md:2}} >\r\n                        <Grid item container xs = {12} md = {4} lg = {3} style = {{border: \"0px solid\",padding:\"12px\", height: \"fit-content\"}}>\r\n                            <NewTodo submitHandler = {this.submitHandler} newTodoError = {this.state.newTodoError}/>\r\n                        </Grid>\r\n                        </Box>\r\n                        <Box clone order = {{xs:3, md:3}} >\r\n                        <Grid item sm = {false} lg = {1}></Grid> \r\n                        </Box>\r\n                    </Grid>)\r\n                }\r\n            }          \r\n        </AuthConsumer>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import { Button, Grid, Paper, TextField, Typography } from '@material-ui/core'\r\nimport React, { Component } from 'react'\r\nimport { Redirect } from 'react-router'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Link } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\n\r\nimport { AuthConsumer } from '../Utils/AuthContext';\r\n\r\nclass SignIn extends Component {\r\n    constructor(props, context)\r\n    {\r\n        super(props, context)\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\"\r\n        }\r\n    }\r\n    changeHandler = (e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AuthConsumer>\r\n            {\r\n                (context) => {\r\n                    return (!context.isSignedIn ?\r\n                    <Grid container item xs = {12} justify=\"center\" alignItems=\"center\" style = {{height:\"100vh\"}}>\r\n                        <Paper style = {{padding: \"16px\",width:\"75vh\"}} elevation = {3}>\r\n                            <Typography variant = \"h3\">Sign In</Typography>\r\n                            {context.signInError && <Alert severity=\"error\" variant=\"outlined\" style = {{margin: \"12px 0px\"}}>{context.signInError}</Alert>}\r\n                            <form method=\"post\" action = \"/auth/signin\" onSubmit = {(e) =>{e.preventDefault(); context.signin(this.state.username, this.state.password)}}>\r\n                                <TextField \r\n                                    name = \"username\"\r\n                                    label=\"Username\" \r\n                                    variant=\"outlined\" \r\n                                    fullWidth \r\n                                    style={{ margin: \"4px 0px\"  }} \r\n                                    className = \"customInput\"\r\n                                    onChange={(e) => this.changeHandler(e)} />\r\n                                <TextField \r\n                                    name = \"password\"\r\n                                    label=\"Password\" \r\n                                    type=\"password\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth \r\n                                    className = \"customInput\"\r\n                                    style={{ margin: \"4px 0px\"}} \r\n                                    onChange={(e) => this.changeHandler(e)}/>\r\n                                <Button\r\n                                    variant=\"contained\" \r\n                                    color=\"primary\" \r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    style={{ margin: \"4px 0px\"}} \r\n                                    endIcon = {context.signinInProgress && <CircularProgress style = {{color: \"#FFFFFF\"}} size={20}/>}>\r\n                                        sign in\r\n                                </Button>\r\n                                <Typography variant = \"h6\">Need an account? <Link to = \"/signup\">Sign Up</Link></Typography>\r\n                            </form>                         \r\n                        </Paper>\r\n                    </Grid>\r\n                    :\r\n                    <Redirect to = \"/\"/>)\r\n            }}\r\n            </AuthConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn\r\n","import { Button, Grid, Paper, TextField, Typography } from '@material-ui/core'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport React, { Component } from 'react'\r\nimport { Redirect } from 'react-router'\r\nimport { Link } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\n\r\nimport { AuthConsumer } from '../Utils/AuthContext';\r\n\r\nclass SignUp extends Component {\r\n    constructor()\r\n    {\r\n        super()\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            name: \"\",\r\n            isSignedIn: false,\r\n            message:null\r\n        }\r\n    }\r\n    changeHandler = (e) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        fetch(\"/auth/signup\",\r\n        {\r\n            method: 'post',\r\n            body: JSON.stringify({username: this.state.username,password:this.state.password,name:this.state.name}),\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        })\r\n        .then(async (resp) => \r\n        {\r\n            let data = await resp.json()\r\n            if(resp.status == 200)\r\n            {\r\n                this.setState({\r\n                    isSignedIn: true\r\n                },()=>{\r\n                    this.props.updateState()\r\n                })\r\n            }\r\n            else\r\n            {\r\n                this.setState({\r\n                    message:data.message,\r\n                    isSignedIn: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AuthConsumer>\r\n            {\r\n                (context) => {\r\n                    return (!context.isSignedIn ? \r\n                    <Grid item container xs = {12} justify=\"center\" alignItems=\"center\" style = {{height:\"100vh\"}}>\r\n                        <Paper style = {{padding: \"16px\",width:\"75vh\"}} elevation = {3}>\r\n                            <Typography variant = \"h3\">Sign Up</Typography>\r\n                            {context.signUpError && <Alert severity=\"error\" variant=\"outlined\" style = {{margin: \"12px 0px\"}}>{context.signUpError}</Alert>}\r\n                            <form method=\"post\" action = \"/auth/signup\" onSubmit = {(e) =>{e.preventDefault(); context.signup(this.state.name, this.state.username, this.state.password)}}>\r\n                                <TextField \r\n                                    name = \"name\"\r\n                                    label=\"Name\" \r\n                                    variant=\"outlined\" \r\n                                    fullWidth\r\n                                    style={{ margin: \"4px 0px\" }} \r\n                                    onChange={(e) => this.changeHandler(e)} />\r\n                                \r\n                                <TextField \r\n                                    name = \"username\"\r\n                                    label=\"Username\" \r\n                                    variant=\"outlined\" \r\n                                    fullWidth\r\n                                    style={{ margin: \"4px 0px\", display: \"block\"  }} \r\n                                    onChange={(e) => this.changeHandler(e)} />\r\n                                <TextField \r\n                                    name = \"password\"\r\n                                    label=\"Password\" \r\n                                    type=\"password\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    style={{ margin: \"4px 0px\", display: \"block\"}} \r\n                                    onChange={(e) => this.changeHandler(e)}/>\r\n                                <Button\r\n                                    variant=\"contained\" \r\n                                    color=\"primary\" \r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    style={{ margin: \"4px 0px\"}} \r\n                                    endIcon = {context.signupInProgress && <CircularProgress style = {{color: \"#FFFFFF\"}} size={20}/>}>\r\n                                        sign up\r\n                                </Button>\r\n                                <Typography variant = \"h6\">Have an account? <Link to = \"/signin\">Sign In</Link></Typography>\r\n\r\n                            </form>                         \r\n                        </Paper>\r\n                    </Grid>\r\n                    :\r\n                    <Redirect to = \"/\"/>)\r\n\r\n                }\r\n            }\r\n            </AuthConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp\r\n","import './App.css';\nimport { AppBar, Toolbar, Typography, IconButton, Grid, Box, Button } from '@material-ui/core';\nimport Cookies from 'universal-cookie';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect} from \"react-router-dom\";\nimport React from 'react';\nimport Home from './components/Home'\nimport SignIn from './components/SignIn'\nimport SignUp from './components/SignUp';\nimport { AuthConsumer, AuthProvider } from './Utils/AuthContext';\nclass App extends React.Component {\n  constructor()\n  {\n    super();\n    this.state = {\n      isSignedIn: false,\n      loaded: false\n    }\n  }  \n  render()\n  {\n    return (\n        <div className=\"App\">\n          <AuthProvider>\n            <AppBar position=\"static\">\n              <Toolbar>\n                \n                <Typography variant=\"h6\" style={{ flex: 1 }}>To-Doer</Typography>\n                <AuthConsumer>\n                  {\n                    (context) =>{\n                      return  <Router>\n                                <Link to = \"/signin\"><Button style = {{color: \"white\", textDecoration: \"none\"}} onClick = {()=>context.signout()}>{context.isSignedIn ? \"Logout\" : \"Login\"}</Button></Link>\n                              </Router>\n                    }\n                  }\n                </AuthConsumer>\n                \n              </Toolbar>\n            </AppBar> \n            <Router>\n              <Switch> \n                <Route path = \"/\" exact component = {Home}/>\n                <Route path = \"/signin\" exact component = {SignIn}/>\n                <Route path = \"/signup\" exact component = {SignUp}/>\n              </Switch>\n            </Router>\n          </AuthProvider>\n        </div>      \n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}